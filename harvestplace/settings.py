"""
Django settings for harvestplace project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l)r@ohd0=)bp5v+^jt1_xo)2=o6*pa5ji9@bj495&g+-379&g('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'accounts',
    'market',
    'inventory',
    'orders',
    'wallet',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'harvestplace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'harvestplace.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'harvestplace_db',  # database name
#         'USER': 'postgres',  # PostgreSQL username
#         'PASSWORD': '1234',  # PostgreSQL password
#         'HOST': 'localhost',  # Or your PostgreSQL server host
#         'PORT': '5432',  # Default PostgreSQL port
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'accounts.CustomUser' # --------To define custom user model

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication', # ---------- Token authentication
    ],
     "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,  # default items per page
    "DEFAULT_FILTER_BACKENDS": [
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
}

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media' # ----- for profile pictures




######################################################
# -- ADDITIONAL SECURITY SETTINGS FOR HARVESTPLACE API
######################################################

# --- Additional settings for the project can be added here, such as logging, email configuration, etc.
# settings.py — Browser-Side Security Headers
# SECURE_BROWSER_XSS_FILTER = True
# X_FRAME_OPTIONS = 'DENY'
# SECURE_CONTENT_TYPE_NOSNIFF = True


# # settings.py — Secure Cookies
# CSRF_COOKIE_SECURE = True #--- Ensures that the CSRF cookie is only sent over HTTPS
# SESSION_COOKIE_SECURE = True #--- Ensures that the session cookie is only sent over HTTPS

# # settings.py — Content Security Policy (CSP)
# # CSP_DEFAULT_SRC = ("'self'",)
# # CSP_SCRIPT_SRC = ("'self'",) # Allows scripts from the same origin while also allowing trusted CDNs another example: 'https://trusted.cdn.com'
# # CSP_STYLE_SRC = ("'self'",) # Allows styles from the same origin while also allowing Google Fonts. Another example is to include: 'https://fonts.googleapis.com'
# # CSP_IMG_SRC = ("'self'", 'data:') # Allows images from the same origin and data URIs
# # CSP_FONT_SRC = ("'self'",)
# # -------------- Above is the old way of setting CSP, which is now deprecated in favor of the new way below ----------------
# from csp.constants import SELF

# CONTENT_SECURITY_POLICY = {
#     "EXCLUDE_URL_PREFIXES": ["/admin"],
#     "DIRECTIVES": {
#         "default-src": [SELF, "*.example.com"],
#         "script-src": [SELF, "js.cdn.com/example/"],
#         "img-src": [SELF, "data:", "example.com"],
#     },
# }

# # Security Settings to Adjust:
# # SECURE_SSL_REDIRECT: Set to True to redirect all non-HTTPS requests to HTTPS.
# # SECURE_HSTS_SECONDS: Set an appropriate value (e.g., 31536000 for one year) to instruct browsers to only access the site via HTTPS for the specified time.
# # SECURE_HSTS_INCLUDE_SUBDOMAINS and SECURE_HSTS_PRELOAD: Set to True to include all subdomains in the HSTS policy and to allow preloading.
# # SECURE_HSTS_PRELOAD: Set to True to allow preloading of the HSTS policy.
# # --- Note: Ensure that your web server is configured to handle HTTPS requests properly.

# SECURE_HSTS_SECONDS = 31536000  # One year
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SECURE_SSL_REDIRECT = True  # Redirect all HTTP requests to HTTPS

# # Ensure secure cookies
# SESSION_COOKIE_SECURE = True  # Ensure session cookies are only sent over HTTPS
# CSRF_COOKIE_SECURE = True  # Ensure CSRF cookies are only sent over HTTPS

# # Implement secure headers
# SECURE_BROWSER_XSS_FILTER = True  # Enable the browser's XSS filter
# SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevent the browser from MIME-sniffing a response away from the declared content type
# X_FRAME_OPTIONS = 'DENY'  # Prevent the site from being framed to protect against clickjacking attacks --- 


# # LibraryProject/LibraryProject/settings.py doesn't contain: ["SECURE_PROXY_SSL_HEADER", "HTTP_X_FORWARDED_PROTO"
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')  # Uncomment if using a reverse proxy that sets this header
